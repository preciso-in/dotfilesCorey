setopt prompt_subst

function preexec() {
  cmd_start=$(($(print -P %D{%s%6.}) / 1000))

  width=$(tput cols -1)
  local text="Command executed at $(date +'%d-%b-%Y@%H:%M:%S') "

  # Use printf to format the text
  printf "%${width}s\n" "$text"
}

function precmd() {
  print ""
  print ""
  if [ $cmd_start ]; then
    local now=$(($(print -P %D{%s%6.}) / 1000))
    local d_ms=$(($now - $cmd_start))
    local d_s=$((d_ms / 1000))
    local ms=$((d_ms % 1000))
    local s=$((d_s % 60))
    local m=$(((d_s / 60) % 60))
    local h=$((d_s / 3600))

    if ((h > 0)); then
      cmd_time=${h}h${m}m
    elif ((m > 0)); then
      cmd_time=${m}m${s}s
    elif ((s > 5)); then
      cmd_time=${s}.$(printf %01d $ms | cut -c1-1)s # 12.3s
    elif ((s > 0)); then
      cmd_time=${s}.$(printf %02d $ms | cut -c1-2)s # 1.23s
    else
      cmd_time=${ms}ms
    fi

    unset cmd_start
  else
    # Clear previous result when hitting Return with no command to execute
    unset cmd_time
  fi
}

parse_git_branch() {
  local branch="\uE0A0"
  branch+=$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  local changes=""
  local git_status=$(git status --porcelain 2>/dev/null)
  local color=green
  local result=""
  if echo "$git_status" | grep -qE "^ *M"; then
    local numModifiedFiles=$(echo "$git_status" | egrep "^ *M" | wc -l)
    changes="$((numModifiedFiles))M"
  fi
  if echo "$git_status" | grep -qE "^ A|^\?\?"; then
    color=yellow
    local numAddedFiles=$(echo "$git_status" | egrep "^ A|^\?\?" | wc -l)
    changes="${changes} $((numAddedFiles))A"
  fi
  if echo "$git_status" | grep -qE "^ D"; then
    color=yellow
    local numDeletedFiles=$(echo "$git_status" | egrep "^ D" | wc -l)
    changes="${changes} $((numDeletedFiles))D"
  fi

  if [[ -n "${changes}" ]]; then
    result="${branch} ( ${changes} )"
  else
    result="${branch}"
  fi

  if [[ ! -n ${branch} ]]; then
    result=""
  fi

  if [[ -n $(echo "$git_status" | grep '^[^ ]') ]]; then
    # There are unstaged changes
    color=red
  elif [[ -n $(echo "$git_status" | grep '^ [^ ]') ]]; then
    # All changes are staged
    color=yellow
  else
    # No changes
    color=green
  fi

  echo "%F{${color}}${result}%F{reset}"
}

precmd_functions+=(set_rprompt)

function set_rprompt() {
  RPROMPT="$(parse_git_branch)"
}

PROMPT='%F{5}$(if [ $cmd_time ]; then echo "($cmd_time) "; fi)$(date "+%F %T")%F{none}
%~
%(?.%F{green}⏺.%F{red}⏺)%f %1~ %# '
